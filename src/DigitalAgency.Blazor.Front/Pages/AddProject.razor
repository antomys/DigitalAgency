@page "/addproject"
@using JsonSerializer = System.Text.Json.JsonSerializer
@using Task = System.Threading.Tasks.Task
@using DigitalAgency.Dal.Entities
@using Newtonsoft.Json
@using DigitalAgency.Bll.Models
@using System.Text
@inject NavigationManager _navigationManager
@inject IHttpClientFactory _clientFactory;


<link rel="stylesheet" href="css/bootstrap/bootstrap.min.css"/>
<link href="css/site.css" rel="stylesheet"/>

<h1>Add new project</h1>

@if (Clients == null)
{
    <p>
        <em>Loading ...</em>
    </p>
}
else
{
    <p/>
    <table>
        <tr>
            <td>Project Description:</td>
            <td>
                <input @bind="ProjectDescription"/>
            </td>
        </tr>
        <tr>
            <td>Project Link:</td>
            <td>
                <input @bind="ProjectLink"/>
            </td>
        </tr>
        <tr>
            <td>Project Name:</td>
            <td>
                <input @bind="ProjectName"/>
            </td>
        </tr>
        <tr>
            <td>Project creator: </td>
            <select class="custom-select" @onchange="OnValueChanged" title="Region is required ">
                <option value="Select" selected disabled="disabled">Choose Owner</option>
                @foreach (Client region in Clients)
                {
                    <option value="@region.Id">@region.FirstName @region.LastName</option>
                }
            </select>
        </tr>
    </table>
    <p/>
    <a class="btn btn-secondary" href="projects">Back</a>
    <button class="btn btn-primary" @onclick="AddNewProject">&#10004;Add</button>
    @Alert
    <p/>
}

@code {
    private List<Client> Clients { get; set; }
    private string ProjectName { get; set; }
    private string ProjectDescription { get; set; }
    private string ProjectLink { get; set; }
    private string Alert { get; set; }

    [Parameter] public string Value { get; set; }

    [Parameter] public EventCallback<string> ValueChanged { get; set; }

    override protected async Task OnInitializedAsync()
    {
        HttpClient client = _clientFactory.CreateClient();
        HttpResponseMessage result = await client.GetAsync("http://localhost:8443/Client/GetClient");

        string info = await result.Content.ReadAsStringAsync();
        List<Client> deserialized = JsonConvert.DeserializeObject<List<Client>>(info);
        Clients = deserialized?.ToList();
    }

    private Task OnValueChanged(ChangeEventArgs e)
    {
        Value = e.Value.ToString();
        return ValueChanged.InvokeAsync(Value);
    }

    private async void AddNewProject()
    {
        Alert = " ";
        if (ProjectName == string.Empty || ProjectDescription == string.Empty || ProjectLink == string.Empty || string.IsNullOrEmpty(Value))
        {
            Alert = "Fill all fields!";
            return;
        }
        HttpClient client = _clientFactory.CreateClient();

        ProjectModel project = new ProjectModel {
            ProjectName = ProjectName,
            ProjectDescription = ProjectDescription,
            ProjectLink = ProjectLink,
            Client = new ClientModel {
                Id = int.Parse(Value),
            },
        };
        StringContent content = new StringContent(JsonSerializer.Serialize(project), Encoding.UTF8, "application/json");
        HttpResponseMessage response = await client.PostAsync("http://localhost:8443/Project/PostProject", content);

        if (response.IsSuccessStatusCode)
        {
            Alert = "Project successfully added!";
            _navigationManager.NavigateTo("projects");
        }
        else
        {
            Alert = await response.Content.ReadAsStringAsync();
        }
    }

}