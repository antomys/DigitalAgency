@page "/addexecutor"
@using Newtonsoft.Json
@using System.Text
@using DigitalAgency.Dal.Entities
@using DigitalAgency.Dal.Entities.Enums
@using Task = System.Threading.Tasks.Task
@inject IHttpClientFactory _executorFactory;


<link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
<link href="css/site.css" rel="stylesheet" />

<h1>Add new executor</h1>
<p />
<table>
    <tr>
        <td>First name:</td>
        <td><input @bind="FirstName" /></td>
    </tr>
    <tr>
        <td>Middle name:</td>
        <td><input @bind="MiddleName" /></td>
    </tr>
    <tr>
        <td>Last name:</td>
        <td><input @bind="LastName" /></td>
    </tr>
    <tr>
        <td>Phone number:</td>
        <td><input @bind="PhoneNumber" /></td>
    </tr>
    <tr>
        <td>Position:</td>
        <select class="custom-select" @onchange="OnPositionValueChanged" title="Region is required ">
            <option value="Select" selected disabled="disabled">Choose Car</option>
            @foreach (var car in Projects)
            {
                <option value="@car.Id">@car.ProjectName @car.ProjectDescription</option>
            }
        </select> 
    </tr>
</table>
<p />
<a class="btn btn-secondary" href="executors">Back</a>
<button class="btn btn-primary" @onclick="AddNewMechanic">&#10004;Add</button> @Alert
<p />

@code 
{
    private string FirstName { get; set; }
    private string MiddleName { get; set; }
    private string LastName { get; set; }
    private PositionsEnum Position { get; set; }
    private string PhoneNumber { get; set; }
    private string Alert { get; set; }

    
    protected async Task AddNewMechanic()
    {
        Alert = string.Empty;
        if (FirstName == string.Empty 
            || MiddleName == string.Empty 
            || LastName == string.Empty 
            || PhoneNumber == string.Empty)
        {
            Alert = "Fill all fields!";
        }
        var executorFactory = _executorFactory.CreateClient();
        var executor = new Executor
        {
            FirstName = FirstName, MiddleName = MiddleName, LastName = LastName, PhoneNumber = PhoneNumber, 
            Position = Position
        };
        var content = new StringContent(JsonConvert.SerializeObject(executor), Encoding.UTF8, "application/json");
        var response = await executorFactory.PostAsync("http://localhost:8443/Client/executor", content);

        Alert = !response.IsSuccessStatusCode
            ? "Fill all fields!"
            : "Executor successfully added!";
    }
}